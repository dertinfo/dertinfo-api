version: '3.8' # Docker Compose file version

services:
  # Service for the Dertinfo API
  dertinfo-api:
    container_name: api
    ports:
      - "44100:80" # Map host port 44300 to container port 80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80;
      - SqlConnection:ServerName=host.docker.internal,44000 # Connect to SQL Server on host machine running in docker
      - SqlConnection:ServerAdminPassword=myUn53cur3Pa55w0rd!
      - SqlConnection:ServerAdminName=sa
      - SqlConnection:DatabaseName=DertInfoDb
      - SendGrid:Enabled=false
      - Auth0:Domain=dertinfodev.eu.auth0.com
      - StorageAccount:Images:Protocol=http
      - StorageAccount:Images:Name=devstoreaccount1
      - StorageAccount:Images:Key=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw== # Azurite Key Available Publically
      - StorageAccount:Images:BlobEndpoint=http://host.docker.internal:10000/devstoreaccount1 #  Running in docker
      # [VS: Do Not Override Secrets With Envionment Vars For This Setting] - Auth0:ManagementClientSecret=[theApiWillNeedThisValueToAuthoriseRequests]
      # [VS: Do Not Override Secrets With Envionment Vars For This Setting] - SendGrid:ApiKey=[notRequiredAsEmailsDisabled]
    build:
      context: .
      dockerfile: dertinfo-api/Dockerfile
    image: dertinfo/dertinfo-api
    depends_on:
    - sqlserver # Ensure SQL Server starts before the app

  # Service for SQL Server
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      - SA_PASSWORD=myUn53cur3Pa55w0rd!
      - ACCEPT_EULA=Y
    ports:
      - "44000:1433" # Map host port 44100 to container port 1433
    volumes:
     - sqlserver-data:/var/opt/mssql # Persist SQL Server data

  # Service for Azurite storage emulator
  azstorage:
    container_name: azstorage
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - azstorage-data:/data
    command: "azurite --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost 0.0.0.0" # Allow access from any IP or Container


  app-frontend:
    container_name: app
    image: dertinfo/dertinfo-app:latest
    ports:
      - "44300:4280" # Map host port 44200 to container port 80
    depends_on:
      - dertinfo-api # Ensure API starts before the web client  

  image-resize:
   container_name: image-resize
   image: dertinfo/dertinfo-imageresizev4:latest
   ports:
     - "44400:80" # Map host port 44400 to container port 80
   environment:
     - AzureWebJobs.ResizeDefaultImages.Disabled=true
     - AzureWebJobs.ResizeEventImages.Disabled=true
     - AzureWebJobs.ResizeGroupImages.Disabled=true
     - AzureWebJobs.ResizeSheetImages.Disabled=true
     - AzureWebJobsStorage=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://host.docker.internal:10000/devstoreaccount1;QueueEndpoint=http://host.docker.internal:10001/devstoreaccount1; # Azurite Connection Available Publically
     - StorageConnection__Images=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://host.docker.internal:10000/devstoreaccount1;QueueEndpoint=http://host.docker.internal:10001/devstoreaccount1;  # Azurite Connection Available Publically
   depends_on:
     - dertinfo-api # Ensure API starts before the resize service
     - azstorage # Ensure storage starts before the resize service

  web-frontend:
    container_name: web
    image: dertinfo/dertinfo-web:latest
    ports:
      - "44200:4280" # Map host port 44200 to container port 80
    depends_on:
      - dertinfo-api # Ensure API starts before the web client

# Define named volumes
volumes:
  sqlserver-data: # Look at docker desktop for the volume to manipulate.
  azstorage-data: # Look at docker desktop for the volume to manipulate.